/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 22.04.0 ] */
/* [wxMaxima: input   start ] */
load(eigen)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
v: matrix([x], [y], [z]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
u: covect([x, y, z]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
part(u, 2, 1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
part(%o3, 2);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
args(u);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
makelist(part(u, i, 1), i, 1, length(v));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
makelist(part(u[i], 1), i, 1, length(u));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
q: matrix([1, 2, 3]);
r: matrix([-1, -2, -3]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
q + r;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
q * r;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
q - r;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
2 * q;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
-1 * r;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
q.r;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
r.q;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a: covect([3, 2, 7]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
b: covect([1, 3, 0]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a.b;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
unitvector(a);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
norme(vector):= sqrt(vector[1] ** 2 + vector[2] ** 2 + vector[3] ** 2)[1];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
norme(a);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a[1];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a[1] ** 2;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
norme1(vector):= sqrt(sum(part(vector, i, 1) ** 2, i, 1, length(vector)));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
norme1(a);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
unitvectortanana(vector):= covect(makelist(part(vector, i, 1) / norme1(vector), i, 1, length(vector)));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
unitvectortanana(a);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
transpose(a);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
A: matrix([2, 4, -1], [3, 0, -1], [5, -4, 3]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
determinant(A);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
transpose(A);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
A.A;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
A+A;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
K: matrix([k11, k12, k13], [k21, k22, k23], [k31, k32, k33]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
L: matrix([l11, l12, l13], [l21, l22, l23], [l31, l32, l33]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
L;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
K;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
K*L;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
K.L;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
L.K;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
K.transpose(K);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
K*transpose(K);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
determinant(K);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
invert(K);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
B: matrix([2, 4, 3], [-1, 0, 7], [5, 1, -4]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
determinant(B);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
invert(B);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
TSup: matrix([1, 0, 0], [1, 2, 0], [1, 2, 3]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
determinant(TSup);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
M: matrix([1, 5, 4], [-2, 3, 7], [4, 2, 0]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Decomposition de la matrice en P, L, U
P est le premier element
L est le deuxieme element
U est le troisieme element
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
x: lu_factor(M);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
lf: get_lu_factors(x);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
P: part(lf, 1);
L: part(lf, 2);
U: part(lf, 3);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
On a une matrice Identite 3 * 3
         1 0 0
e =    0 1 0
         0 0 1
avec 
  e1 la premiere ligne
  e2 la deuxieme ligne
  e3 la troisieme ligne
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
e1: covect([1, 0, 0]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
e2: covect([0, 1, 0]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
e3: covect([0, 0, 1]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Resolution des equations
   [wxMaxima: comment end   ] */


/* [wxMaxima: comment start ]
v1 est la resolution de X * v1 = e1
v2 est la resolution de X * v2 = e2
v3 est la resolution de X * v3 = e3
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
v1: lu_backsub(x, e1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
v2: lu_backsub(x, e2);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
v3: lu_backsub(x, e3);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
L1: makelist(part(args(v1), i, 1), i, 1, 3);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
L2: makelist(part(args(v2), i, 1), i, 1, 3);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
L3: makelist(part(args(v3), i, 1), i, 1, 3);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
La matrice inverse est egal a 
  v11, v21, v31
  v12, v22, v32
  v13, v23, v33
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
M1: transpose(matrix(L1, L2, L3));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
M.M1;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
rank(M1);
/* [wxMaxima: input   end   ] */



/* Old versions of Maxima abort on loading files that end in a comment. */
"Created with wxMaxima 22.04.0"$
